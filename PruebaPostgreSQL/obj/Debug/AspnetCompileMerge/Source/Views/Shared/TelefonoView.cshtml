@model Entities.Terceros.ViewModels.Terceros_TelefonoEditViewModel


@using (Html.BeginCollectionItem("ListaTelefonoEditViewModel"))
{
    

<div id="telefono_@Model.identificadortelefono" name="telefono_@Model.identificadortelefono">

    <div>
        @Html.HiddenFor(model => model.id)
        @Html.HiddenFor(model => model.esactivo)
        <div class="col-md-3 col-sm-3 col-xs-12 form-group has-feedback">
            @Html.LabelFor(model => model.telefono, htmlAttributes: new { @class = "control-label" })
            @Html.EditorFor(model => model.telefono, new { htmlAttributes = new { @class = "form-control", @placeholder = "Teléfono", onkeypress = "soloNumeros(event)" } })
            <span class="fa fa-phone form-control-feedback right" aria-hidden="true"></span>
            @Html.ValidationMessageFor(model => model.telefono, "", new { @class = "text-danger" })
        </div>
        <div class="col-md-2 col-sm-2 col-xs-12">
            @Html.LabelFor(model => model.extencion, htmlAttributes: new { @class = "control-label" })
            @Html.EditorFor(model => model.extencion, new { htmlAttributes = new { @class = "form-control", @placeholder = "Extensión", onkeypress = "soloNumeros(event)" } })
            @Html.ValidationMessageFor(model => model.extencion, "", new { @class = "text-danger" })
        </div>
        <div class="col-md-1 col-sm-1 col-xs-12 form-group has-feedback">
            @Html.LabelFor(model => model.escontacto, htmlAttributes: new { @class = "control-label" })
            <div class="has-feedback-left">
                @Html.EditorFor(model => model.escontacto)
                @Html.ValidationMessageFor(model => model.escontacto, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="col-md-1 col-sm-1 col-xs-12 form-group has-feedback">
            @Html.LabelFor(model => model.esfijo, htmlAttributes: new { @class = "control-label" })
            <div class="has-feedback-left">
                @Html.EditorFor(model => model.esfijo)
                @Html.ValidationMessageFor(model => model.esfijo, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="col-md-1 col-sm-1 col-xs-12 form-group has-feedback">
            @Html.LabelFor(model => model.escelular, htmlAttributes: new { @class = "control-label" })
            <div class="has-feedback-left">
                @Html.EditorFor(model => model.escelular)
                @Html.ValidationMessageFor(model => model.escelular, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="col-md-1 col-sm-1 col-xs-12 form-group has-feedback">
            @Html.LabelFor(model => model.eswapsap, htmlAttributes: new { @class = "control-label" })
            <div class="has-feedback-left">
                @Html.EditorFor(model => model.eswapsap)
                @Html.ValidationMessageFor(model => model.eswapsap, "", new { @class = "text-danger" })
            </div>
        </div>

    </div>

    <ul class="nav navbar-right center panel_toolbox">
        <li>
            <a class="close-link" onclick="EliminarTelefono('@Model.identificadortelefono');" style="cursor:pointer;"><i class="fa fa-trash"></i></a>
        </li>
    </ul>
    <div class="clearfix"></div>
    <div class="x_title"></div>
</div>

}
